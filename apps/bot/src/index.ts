import 'dotenv/config'
import TelegramBot from 'node-telegram-bot-api'
import { connectDB, LinkModel } from './db'
import { downloadFileByGuid, getDeal, getDealAttaches } from './stocrm'

async function main() {
	const { BOT_TOKEN, MONGODB_URI, WEBAPP_URL } = process.env
	if (!BOT_TOKEN) throw new Error('BOT_TOKEN is required')
	if (!MONGODB_URI) throw new Error('MONGODB_URI is required')
	if (!WEBAPP_URL) throw new Error('WEBAPP_URL is required')

	await connectDB(MONGODB_URI)

	const bot = new TelegramBot(BOT_TOKEN, { polling: true })
	const me = await bot.getMe()
	console.log(`Bot started: @${me.username} (id=${me.id})`)

	bot.on('polling_error', e => console.error('Polling error:', e))
	bot.on('message', msg => console.log('Got update:', msg.chat.id, msg.text))

	const safeReply = async (
		chatId: number,
		text: string,
		extra?: TelegramBot.SendMessageOptions
	) => {
		try {
			await bot.sendMessage(chatId, text, extra)
			console.log('Sent ->', chatId, text.slice(0, 80))
		} catch (e: any) {
			console.error('sendMessage error:', e?.response?.body || e?.message || e)
		}
	}

	async function sendAuthUI(chatId: number, url: string) {
		// 1) Inline-–∫–Ω–æ–ø–∫–∞ (–≤—Å–µ–≥–¥–∞ –≤–∏–¥–Ω–∞ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º)
		await safeReply(chatId, '–í—Ö–æ–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç:', {
			reply_markup: {
				inline_keyboard: [[{ text: 'üîê –í–æ–π—Ç–∏', web_app: { url } }]],
			},
		})
	
	}

	// /login ‚Äî –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–æ–∫–∞–∑ –∫–Ω–æ–ø–∫–∏ –≤—Ö–æ–¥–∞
	bot.onText(/^\/login(?:@\w+)?/, async msg => {
		try {
			await sendAuthUI(msg.chat.id, WEBAPP_URL!)
		} catch (e) {
			console.error('LOGIN handler error', e)
		}
	})

	// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
	bot.on('message', async msg => {
		const chatId = msg.chat.id
		const text = (msg.text || '').trim()

		// 1) –õ–æ–≤–∏–º /start –∏ /start@username (—Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ —Ç–æ–∂–µ)
		if (/^\/start(?:@\w+)?(?:\s|$)/i.test(text)) {
			try {
				await sendAuthUI(chatId, WEBAPP_URL!)
			} catch (e) {
				console.error('START handler error', e)
			}
			return
		}

		// 2) –ï—Å–ª–∏ –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç (–Ω–µ –∫–æ–º–∞–Ω–¥–∞ –∏ –Ω–µ –Ω–æ–º–µ—Ä) ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—Ö–æ–¥–∞
		if (text && !text.startsWith('/') && !/^\d{4,}$/.test(text)) {
			await sendAuthUI(chatId, WEBAPP_URL!)
			return
		}

		// 3) –ï—Å–ª–∏ —ç—Ç–æ –Ω–æ–º–µ—Ä —Å–¥–µ–ª–∫–∏ ‚Äî –≤—ã–ø–æ–ª–Ω—è–µ–º –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É
		if (text && /^\d{4,}$/.test(text)) {
			const telegramId = msg.from?.id
			if (!telegramId) return

			const link = await LinkModel.findOne({ telegram_id: telegramId })
			if (!link) {
				await safeReply(
					chatId,
					'–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é. –ù–∞–∂–º–∏—Ç–µ ¬´–í–æ–π—Ç–∏¬ª –∏ –∑–∞–≤–µ—Ä—à–∏—Ç–µ –≤—Ö–æ–¥ —á–µ—Ä–µ–∑ WebApp.'
				)
				return
			}

			const dealCode = text // <-- –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–¥–µ–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
			try {
				const deal = await getDeal(dealCode)

				// –£—á–∏—Ç—ã–≤–∞–µ–º —Ç–≤–æ–π –æ—Ç–≤–µ—Ç: —Ç–∞–º –µ—Å—Ç—å CONTACT_ID –∏ PAYER_DATA
				const dealContactId =
					deal?.CONTACT_ID ||
					deal?.PAYER_DATA ||
					deal?.CONTACT?.ID ||
					deal?.CONTACTID

				if (!dealContactId) {
					await safeReply(
						chatId,
						'–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–¥–µ–ª–∫—É (–Ω–µ—Ç CONTACT_ID).'
					)
					return
				}
				if (Number(dealContactId) !== Number(link.contact_id)) {
					await safeReply(chatId, '–≠—Ç–∞ —Å–¥–µ–ª–∫–∞ –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω–∞ –∫ –≤–∞—à–µ–º—É –∫–æ–Ω—Ç–∞–∫—Ç—É.')
					return
				}

				const attaches = await getDealAttaches(dealCode)
				if (!attaches || attaches.length === 0) {
					await safeReply(chatId, '–ö —Å–¥–µ–ª–∫–µ –Ω–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω—ã —Ñ–∞–π–ª—ã.')
					return
				}

				await safeReply(
					chatId,
					`–ù–∞—à—ë–ª ${attaches.length} —Ñ–∞–π–ª(–æ–≤). –û—Ç–ø—Ä–∞–≤–ª—è—é...`
				)

				for (const a of attaches) {
					const guid = (a as any).GUID || (a as any).guid || (a as any).Guid
					const name = (a as any).NAME || (a as any).name || 'file'
					if (!guid) continue
					try {
						const { buffer, contentType, filename } = await downloadFileByGuid(
							guid
						)
						await bot.sendDocument(
							chatId,
							buffer,
							{},
							{ filename: filename || name, contentType }
						)
						console.log('Sent doc ->', chatId, filename || name)
					} catch (err) {
						console.error('Send file error', err)
						await safeReply(chatId, `–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª ${name}`)
					}
				}
			} catch (e) {
				console.error(e)
				await safeReply(
					chatId,
					'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏ –∏–ª–∏ —Ñ–∞–π–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
				)
			}
		}
	})
}

main().catch(e => {
	console.error('Fatal:', e)
	process.exit(1)
})
